import 'dart:convert';

import 'package:clean_arquicture/feature/register/domain/entities/cat_entity.dart';

class CatModel extends CatEntity {
  CatModel({
    required Weight weight,
    required String id,
    required String name,
    String? cfaUrl,
    String? vetstreetUrl,
    String? vcahospitalsUrl,
    required String temperament,
    required String origin,
    required String countryCodes,
    required String countryCode,
    required String description,
    required String lifeSpan,
    required int indoor,
    int? lap,
    String? altNames,
    required int adaptability,
    required int affectionLevel,
    required int childFriendly,
    required int dogFriendly,
    required int energyLevel,
    required int grooming,
    required int healthIssues,
    required int intelligence,
    required int sheddingLevel,
    required int socialNeeds,
    required int strangerFriendly,
    required int vocalisation,
    required int experimental,
    required int hairless,
    required int natural,
    required int rare,
    required int rex,
    required int suppressedTail,
    required int shortLegs,
    String? wikipediaUrl,
    required int hypoallergenic,
    String? referenceImageId,
    int? catFriendly,
    int? bidability,
    String? imageUrl,
  }) : super(
          id: id,
          name: name,
          cfaUrl: cfaUrl,
          vetstreetUrl: vetstreetUrl,
          vcahospitalsUrl: vcahospitalsUrl,
          temperament: temperament,
          origin: origin,
          countryCodes: countryCodes,
          countryCode: countryCode,
          description: description,
          lifeSpan: lifeSpan,
          indoor: indoor,
          lap: lap,
          altNames: altNames,
          adaptability: adaptability,
          affectionLevel: affectionLevel,
          childFriendly: childFriendly,
          dogFriendly: dogFriendly,
          energyLevel: energyLevel,
          grooming: grooming,
          healthIssues: healthIssues,
          intelligence: intelligence,
          sheddingLevel: sheddingLevel,
          socialNeeds: socialNeeds,
          strangerFriendly: strangerFriendly,
          vocalisation: vocalisation,
          experimental: experimental,
          hairless: hairless,
          natural: natural,
          rare: rare,
          rex: rex,
          suppressedTail: suppressedTail,
          shortLegs: shortLegs,
          wikipediaUrl: wikipediaUrl,
          hypoallergenic: hypoallergenic,
          referenceImageId: referenceImageId,
          catFriendly: catFriendly,
          bidability: bidability,
          imageUrl: imageUrl,
          weight: weight,
        );

  factory CatModel.fromJson(String str) => CatModel.fromMap(json.decode(str));

  String toJson() => json.encode(toMap());

  factory CatModel.fromMap(Map<String, dynamic> json) => CatModel(
    weight: Weight.fromMap(json["weight"]),
    id: json["id"],
    name: json["name"],
    cfaUrl: json["cfa_url"],
    vetstreetUrl: json["vetstreet_url"],
    vcahospitalsUrl: json["vcahospitals_url"],
    temperament: json["temperament"],
    origin: json["origin"],
    countryCodes: json["country_codes"],
    countryCode: json["country_code"],
    description: json["description"],
    lifeSpan: json["life_span"],
    indoor: json["indoor"],
    lap: json["lap"],
    altNames: json["alt_names"],
    adaptability: json["adaptability"],
    affectionLevel: json["affection_level"],
    childFriendly: json["child_friendly"],
    dogFriendly: json["dog_friendly"],
    energyLevel: json["energy_level"],
    grooming: json["grooming"],
    healthIssues: json["health_issues"],
    intelligence: json["intelligence"],
    sheddingLevel: json["shedding_level"],
    socialNeeds: json["social_needs"],
    strangerFriendly: json["stranger_friendly"],
    vocalisation: json["vocalisation"],
    experimental: json["experimental"],
    hairless: json["hairless"],
    natural: json["natural"],
    rare: json["rare"],
    rex: json["rex"],
    suppressedTail: json["suppressed_tail"],
    shortLegs: json["short_legs"],
    wikipediaUrl: json["wikipedia_url"],
    hypoallergenic: json["hypoallergenic"],
    referenceImageId: json["reference_image_id"],
    catFriendly: json["cat_friendly"],
    bidability: json["bidability"],
  );

  Map<String, dynamic> toMap() => {
    "id": id,
    "name": name,
    "cfa_url": cfaUrl,
    "vetstreet_url": vetstreetUrl,
    "vcahospitals_url": vcahospitalsUrl,
    "temperament": temperament,
    "origin": origin,
    "country_codes": countryCodes,
    "country_code": countryCode,
    "description": description,
    "life_span": lifeSpan,
    "indoor": indoor,
    "lap": lap,
    "alt_names": altNames,
    "adaptability": adaptability,
    "affection_level": affectionLevel,
    "child_friendly": childFriendly,
    "dog_friendly": dogFriendly,
    "energy_level": energyLevel,
    "grooming": grooming,
    "health_issues": healthIssues,
    "intelligence": intelligence,
    "shedding_level": sheddingLevel,
    "social_needs": socialNeeds,
    "stranger_friendly": strangerFriendly,
    "vocalisation": vocalisation,
    "experimental": experimental,
    "hairless": hairless,
    "natural": natural,
    "rare": rare,
    "rex": rex,
    "suppressed_tail": suppressedTail,
    "short_legs": shortLegs,
    "wikipedia_url": wikipediaUrl,
    "hypoallergenic": hypoallergenic,
    "reference_image_id": referenceImageId,
    "cat_friendly": catFriendly,
    "bidability": bidability,
  };
}

class Weight extends WeightEntity {
  Weight({required super.imperial, required super.metric});

  factory Weight.fromJson(String str) => Weight.fromMap(json.decode(str));

  String toJson() => json.encode(toMap());

  factory Weight.fromMap(Map<String, dynamic> json) =>
      Weight(imperial: json["imperial"], metric: json["metric"]);

  Map<String, dynamic> toMap() => {"imperial": imperial, "metric": metric};
}
